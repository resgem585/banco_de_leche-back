# Definici√≥n de tipos
type User {
  _id: ID
  email: String
  password: String
}

type Donante {
  _id: ID!
  tipo: String
  firstName: String
  lastName: String
  edad: Int
  direccion: String
  ocupacion: String
  partos: Int
  cesareas: Int
  apellidosRNLactante: String
  sdg: Int
  fechaNacimRN: String
  complicacionesEmbarazo: String
  transfusionesUltimos5Anos: String
  tatuajesPiercingsAcupunturaUltimoAno: String
  tratamientoMedico: String
  pruebaRapidaSifilis: String
  pruebaRapidaVIH: String
  pruebaRapidaHepatitisC: String
  observaciones: String
  createdAt: String
  updatedAt: String
}

# Consultas disponibles
type Query {
  getUser: [User]
  donantes: [Donante!]!
  donante(id: ID!): Donante
  login(email: String, password: String): User
}

# Mutaciones disponibles
type Mutation {
  # Usuario
  createUser(email: String!, password: String!): User!
  updateUser(_id: ID!, email: String, password: String): User
  deleteUser(_id: ID!): User

  # Donante
  createDonante(input: DonanteInput!): Donante!
  updateDonante(input: DonanteInput!): Donante!
  deleteDonante(_id: ID!): String!
}

# Input para los datos de Donante
input DonanteInput {
  tipo: String
  firstName: String
  lastName: String
  edad: Int
  direccion: String
  ocupacion: String
  partos: Int
  cesareas: Int
  apellidosRNLactante: String
  sdg: Int
  fechaNacimRN: String
  complicacionesEmbarazo: String
  transfusionesUltimos5Anos: String
  tatuajesPiercingsAcupunturaUltimoAno: String
  tratamientoMedico: String
  pruebaRapidaSifilis: String
  pruebaRapidaVIH: String
  pruebaRapidaHepatitisC: String
  observaciones: String
}
