type User {
  _id: ID
  email:String
  password:String
}

type Donante {
  id: ID!
  tipo: String
  firstName: String
  lastName: String
  edad: Int
  direccion: String
  ocupacion: String
  partos: Int
  cesareas: Int
  apellidosRNLactante: String
  sdg: Int
  fechaNacimRN: String
  complicacionesEmbarazo: String
  transfusionesUltimos5Anos: String
  tatuajesPiercingsAcupunturaUltimoAno: String
  tratamientoMedico: String
  pruebaRapidaSifilis: String
  pruebaRapidaVIH: String
  pruebaRapidaHepatitisC: String
  observaciones: String
  createdAt: String
  updatedAt: String
}

type Query {
 getUser:[User]
 donantes: [Donante!]!
 donante(id: ID!): Donante

 
  login(email:String, password:String): User
}

type Mutation {
  createUser(email: String!, password: String!): User!

  #Update
  updateUser(_id: ID, email:String, password:String): User

  #Delete
  deleteUser(_id: ID): User

  createDonante(input: DonanteInput!): Donante!
  updateDonante(id: ID!, input: DonanteInput!): Donante!
  deleteDonante(id: ID!): String!

}

input DonanteInput {
  tipo: String
  firstName: String
  lastName: String
  edad: Int
  direccion: String
  ocupacion: String
  partos: Int
  cesareas: Int
  apellidosRNLactante: String
  sdg: Int
  fechaNacimRN: String
  complicacionesEmbarazo: String
  transfusionesUltimos5Anos: String
  tatuajesPiercingsAcupunturaUltimoAno: String
  tratamientoMedico: String
  pruebaRapidaSifilis: String
  pruebaRapidaVIH: String
  pruebaRapidaHepatitisC: String
  observaciones: String
}