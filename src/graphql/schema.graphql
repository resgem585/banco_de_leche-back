# Definición de tipos
type User {
  _id: ID
  email: String
  password: String
}

type Donante {
  _id: ID!
  tipo: String
  firstName: String
  lastName: String
  edad: Int
  direccion: String
  ocupacion: String
  partos: Int
  cesareas: Int
  apellidosRNLactante: String
  sdg: Int
  fechaNacimRN: String
  complicacionesEmbarazo: String
  transfusionesUltimos5Anos: String
  tatuajesPiercingsAcupunturaUltimoAno: String
  tratamientoMedico: String
  pruebaRapidaSifilis: String
  pruebaRapidaVIH: String
  pruebaRapidaHepatitisC: String
  observaciones: String
  createdAt: String
  updatedAt: String
  control: Control
}

type Control {
  _id: ID!
  numeroLeche: String!
  tipoLeche: String!
  tipoDonacion: String!
  donadora: String!
  ml: Float!
  fechaExtraccion: String!
  horaExtraccion: String!
  sdg: Int!
  embalaje: String!
  suciedad: String!
  color: String!
  olor: String!
  crematocrito: Float!
  acidezDornic: Float!
  observaciones: String
  donante: Donante  # Relación uno a uno con Donante
  createdAt: String
  updatedAt: String
}

# Inputs para crear o actualizar controles
input ControlInput {
  numeroLeche: String!
  tipoLeche: String!
  tipoDonacion: String!
  donadora: String!
  ml: Float!
  fechaExtraccion: String!
  horaExtraccion: String!
  sdg: Int!
  embalaje: String!
  suciedad: String!
  color: String!
  olor: String!
  crematocrito: Float!
  acidezDornic: Float!
  observaciones: String
  donanteId: ID!
}


# Consultas disponibles
type Query {
  getUser: [User]
  donantes: [Donante!]!
  donante(id: ID!): Donante
  login(email: String, password: String): User
  controles: [Control!]!
  controlPorDonante(donanteId: ID!): Control # Obtener el control de un donante
}

# Mutaciones disponibles
type Mutation {
  # Usuario
  createUser(email: String!, password: String!): User!
  updateUser(_id: ID!, email: String, password: String): User
  deleteUser(_id: ID!): User

  # Donante
  createDonante(input: DonanteInput!): Donante!
  updateDonante(id: ID!, input: DonanteInput!): Donante!
  deleteDonante(id: ID!): String!

  # Control
  createControl(input: ControlInput!): Control!
  updateControl(id: ID!, input: ControlInput!): Control!
  deleteControl(id: ID!): String!
}

# Input para los datos de Donante
input DonanteInput {
  tipo: String
  firstName: String
  lastName: String
  edad: Int
  direccion: String
  ocupacion: String
  partos: Int
  cesareas: Int
  apellidosRNLactante: String
  sdg: Int
  fechaNacimRN: String
  complicacionesEmbarazo: String
  transfusionesUltimos5Anos: String
  tatuajesPiercingsAcupunturaUltimoAno: String
  tratamientoMedico: String
  pruebaRapidaSifilis: String
  pruebaRapidaVIH: String
  pruebaRapidaHepatitisC: String
  observaciones: String
}
